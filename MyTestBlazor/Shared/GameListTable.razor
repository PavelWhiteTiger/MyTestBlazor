<div class="row mb-3">
    <div class="col">
        <select class="btn btn-toolbar border dropdown-toggle" @onchange="ChangeTableStyle">
            <option selected value="">Choose Table Style</option>
            @foreach (var item in AppStyle.TableStyle)
            {
                <option value="@item.Value">@item.Text</option>
            }
        </select>
    </div>
</div>
<div class="table-responsive">
    <table class="table @currenTableStyle">
        <thead class="thead-light">
        <tr>
            <th>Name</th>
            <th>Genre</th>
            <th>Release Date</th>
            <th>
                <input type="checkbox" @bind="@displaybuttons"/>
            </th>
        </tr>
        </thead>
        <tbody>
        <GenericList ListOfItems="Games">
            <ItemTemplate Context="game">
                <IndividualGame Game="game" IsTable="true" DisplayButtons="displaybuttons" DeleteGame="DeleteTheGame"></IndividualGame>
            </ItemTemplate>
        </GenericList>
        <Confirmation @ref="_confirmation" onCancel="OnCancel" onConfirm="OnConfirm">
            <div class="text-danger">
                Do you wish to delete @gameToBeDeleted?
            </div>
        </Confirmation>
        </tbody>
    </table>
</div>

@code
{
    [Parameter]
    public List<Game> Games { get; set; }

    Game gameToBeDeleted;

    public void DoSomeThing()
    {
    }

    bool displaybuttons;

    void DeleteTheGame(Game game)
    {
        gameToBeDeleted = game;
        _confirmation.Show();
    }

    public void OnConfirm()
    {
        Games.Remove(gameToBeDeleted);
        _confirmation.Hide();
        gameToBeDeleted = null;
    }

    public void OnCancel()
    {
        _confirmation.Hide();
        gameToBeDeleted = null;
    }

    [CascadingParameter]
    public AppStyle AppStyle { get; set; }

    string currenTableStyle = "table-striped";

    public Confirmation _confirmation { get; set; }

    private void ChangeTableStyle(ChangeEventArgs currentItem)
    {
        currenTableStyle = currentItem.Value.ToString();
    }
}